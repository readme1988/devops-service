spring:
  datasource:
    url: jdbc:mysql://localhost/devops_service?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: choerodon
    password: choerodon
    hikari:
      maximum-pool-size: 15 # 数据库连接池连接数
  redis:
    host: localhost
  http:
    encoding:
      charset: UTF-8
      force: true
      enabled: true
services:
  harbor:
    baseUrl: "harbor.example.com" # harbor地址
    username: "123456" # harbor用户名
    password: "123456" # 对应harbor用户名的密码
    insecureSkipTlsVerify: false
  gitlab:
    url: "gitlab.example.com" # gitlab地址
    sshUrl: "gitlab.example.com" # 用于ssh操作的gitlab地址
    password: 12345678 # gitlab创建用户的默认密码，不能少于8位
    projectLimit: 100 # gitlab用户可以创建的项目的数量限制
  helm:
    url: "helm.example.com" # 存放helm chart包的仓库地址
  gateway:
    url: "http://api.example.com" # 网关地址
choerodon:
  saga:
    consumer:
      core-thread-num: 20
      max-thread-num:  20 # 消费线程数
      poll-interval: 3 # 拉取消息的间隔(秒)，默认1秒
      enabled: true # 是否启用消费端
  schedule:
    consumer:
      enabled: true # 启用任务调度消费端
      thread-num: 1 # 任务调度消费线程数
      poll-interval-ms: 1000 # 拉取间隔，默认1000毫秒
  resource:
    jwt:
      ignore: /workflow/**, /sonar/**, /ci, /sonar/info, /v2/api-docs, /agent/**, /ws/**, /gitlab/email, /webhook/**, /v2/choerodon/**, /choerodon/**, /actuator/**, /prometheus, /devops/**, /pre_stop
agent:
  version: "0.5.0" # devops-service此版本所预期的 choerodon-agent 的版本
  serviceUrl: "agent.example.com" # 用于 choerodon-agent 连接 devops-service 的地址
  certManagerUrl: "agent.example.com" # 存放CertManager的地址，用于安装
  repoUrl: "helm.example.com" # 存放agent的地址，用于安装
eureka:
  instance:
    preferIpAddress: true
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 3
  client:
    serviceUrl:
      defaultZone: http://localhost:8000/eureka/
    registryFetchIntervalSeconds: 1
mybatis:
  mapperLocations: classpath*:/mapper/*.xml
  configuration:
    mapUnderscoreToCamelCase: true
feign:
  hystrix:
    shareSecurityContext: true
    command:
      default:
        execution:
          isolation:
            thread:
              timeoutInMilliseconds: 30000
ribbon:
  ConnectTimeout: 50000
  ReadTimeout: 50000

asgard-servie:
  ribbon:
    ConnectTimeout: 50000
    ReadTimeout: 50000

logging:
  level:
#    io.choerodon.event.consumer: debug
#    com.zaxxer: debug
    io.choerodon.feign: warn
#    io.choerodon.devops.app.service: debug
  config: classpath:logback-spring.xml