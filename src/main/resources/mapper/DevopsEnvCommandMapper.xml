<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="io.choerodon.devops.infra.mapper.DevopsEnvCommandMapper">

    <select id="queryByObject" resultType="io.choerodon.devops.infra.dto.DevopsEnvCommandDTO">
        SELECT
        d.*
        FROM
        devops_env_command d
        WHERE
        d.object = #{objectType} and d.object_id = #{objectId}
        ORDER BY d.id DESC LIMIT 1
    </select>


    <select id="listByObject" resultType="io.choerodon.devops.infra.dto.DevopsEnvCommandDTO">
        SELECT
        d.*
        FROM
        devops_env_command d
        WHERE
        d.object = #{objectType} and d.object_id = #{objectId}
        <if test="startTime != null">
            AND d.creation_date >= CONCAT('','${startTime}',' 00:00:00')
        </if>
        <if test="endTime != null">
            AND d.creation_date <![CDATA[<=]]>  CONCAT('','${endTime}',' 23:59:59')
        </if>
        ORDER BY d.id DESC
    </select>

    <select id="listInstanceCommand" resultType="io.choerodon.devops.infra.dto.DevopsEnvCommandDTO">
        SELECT
        d.*
        FROM
        devops_env_command d
        WHERE
        d.object = #{objectType} AND d.object_id = #{objectId}
        AND d.command_type IN ('update','create','delete')
        ORDER BY d.id DESC
        limit 30
    </select>

    <select id="listAllInstanceCommandToMigrate" resultType="io.choerodon.devops.infra.dto.DevopsEnvCommandDTO">
   SELECT
	dc.id,
	dc.STATUS,
	de.id envId,
	de.project_id projectId,
	dc.creation_date
FROM
	devops_env_command dc
	LEFT JOIN devops_app_service_instance dai ON dc.object_id = dai.id
	LEFT JOIN devops_env de ON de.id = dai.env_id
    LEFT JOIN devops_deploy_record ddr ON dc.id = ddr.deploy_id AND ddr.deploy_type = 'manual'
WHERE
	dc.object = 'instance'
	AND command_type IN ( 'update', 'create' )
    AND ddr.id IS NULL
    AND de.project_id IS NOT NULL
    </select>

    <update id="updateSha">
        UPDATE devops_env_command dc
        SET dc.error = NULL ,
         dc.sha = #{sha}
        WHERE dc.id = #{id}
    </update>

    <delete id="deleteByObjectTypeAndObjectId">
        DELETE
        FROM devops_env_command
        WHERE object = #{objectType,jdbcType=VARCHAR}
        AND object_id = #{objectId,jdbcType=BIGINT}
    </delete>

    <select id="listCommandsToSync" resultType="io.choerodon.devops.api.vo.kubernetes.Command">
        (SELECT command.id, command.sha AS commit, dasi.code AS resource_name, 'instance' AS resource_type
        FROM devops_app_service_instance dasi
        INNER JOIN devops_env_command command ON dasi.command_id = command.id
        WHERE command.status = 'operating'
        AND dasi.env_id = #{envId,jdbcType=BIGINT}
        AND command.last_update_date <![CDATA[<=]]> #{beforeDate})

        UNION ALL

        (SELECT command.id, command.sha AS commit, dasi.name AS resource_name, 'service' AS resource_type
        FROM devops_service dasi
        INNER JOIN devops_env_command command ON dasi.command_id = command.id
        WHERE command.status = 'operating'
        AND dasi.env_id = #{envId,jdbcType=BIGINT}
        AND command.last_update_date <![CDATA[<=]]> #{beforeDate})

        UNION ALL

        (SELECT command.id, command.sha AS commit, dasi.name AS resource_name, 'ingress' AS resource_type
        FROM devops_ingress dasi
        INNER JOIN devops_env_command command ON dasi.command_id = command.id
        WHERE command.status = 'operating'
        AND dasi.env_id = #{envId,jdbcType=BIGINT}
        AND command.last_update_date <![CDATA[<=]]> #{beforeDate})

        UNION ALL

        (SELECT command.id, command.sha AS commit, dasi.name AS resource_name, 'certificate' AS resource_type
        FROM devops_certification dasi
        INNER JOIN devops_env_command command ON dasi.command_id = command.id
        WHERE command.status = 'operating'
        AND dasi.env_id = #{envId,jdbcType=BIGINT}
        AND command.last_update_date <![CDATA[<=]]> #{beforeDate})

        UNION ALL

        (SELECT command.id, command.sha AS commit, dasi.name AS resource_name, 'configmap' AS resource_type
        FROM devops_config_map dasi
        INNER JOIN devops_env_command command ON dasi.command_id = command.id
        WHERE command.status = 'operating'
        AND dasi.env_id = #{envId,jdbcType=BIGINT}
        AND command.last_update_date <![CDATA[<=]]> #{beforeDate})

        UNION ALL

        (SELECT command.id, command.sha AS commit, dasi.name AS resource_name, 'secret' AS resource_type
        FROM devops_secret dasi
        INNER JOIN devops_env_command command ON dasi.command_id = command.id
        WHERE command.status = 'operating'
        AND dasi.env_id = #{envId,jdbcType=BIGINT}
        AND command.last_update_date <![CDATA[<=]]> #{beforeDate})

        UNION ALL

        (SELECT command.id, command.sha AS commit, dasi.name AS resource_name, 'persistentvolume' AS resource_type
        FROM devops_pv dasi
        INNER JOIN devops_env env ON dasi.cluster_id = env.cluster_id
        INNER JOIN devops_env_command command ON dasi.command_id = command.id
        WHERE command.status = 'operating'
        AND env.id = #{envId,jdbcType=BIGINT}
        AND command.last_update_date <![CDATA[<=]]> #{beforeDate})

        UNION ALL

        (SELECT command.id, command.sha AS commit, dasi.name AS resource_name, 'persistentvolumeclaim' AS resource_type
        FROM devops_pvc dasi
        INNER JOIN devops_env_command command ON dasi.command_id = command.id
        WHERE command.status = 'operating'
        AND dasi.env_id = #{envId,jdbcType=BIGINT}
        AND command.last_update_date <![CDATA[<=]]> #{beforeDate})
    </select>
</mapper>