<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="io.choerodon.devops.infra.mapper.PipelineMapper">
    <select id="listByOptions" resultType="io.choerodon.devops.infra.dto.PipelineDTO">
        <choose>
            <when test="pipelineSearchVO!=null and pipelineSearchVO.executor !=null and pipelineSearchVO.creator != null and pipelineSearchVO.manager == null">
                <include refid="executorSql"/>
                union
                <include refid="creatorSql"/>
            </when>
            <when test="pipelineSearchVO!=null and pipelineSearchVO.executor !=null and pipelineSearchVO.manager == null and  pipelineSearchVO.creator == null">
                <include refid="executorSql"/>
            </when>
            <when test="pipelineSearchVO!=null and pipelineSearchVO.creator != null and pipelineSearchVO.manager == null and pipelineSearchVO.executor == null">
                <include refid="creatorSql"/>
            </when>
            <otherwise>
                <include refid="manageSql"/>
            </otherwise>
        </choose>
        <if test="sort!=null and sort!=''">
            ORDER By ${sort}
        </if>
        <if test="sort==null or sort==''">
            ORDER BY
            is_enabled DESC,
            id DESC
        </if>
    </select>

    <sql id="sqlparamEnvId">
        <if test='pipelineSearchVO!=null and pipelineSearchVO.envId!= null'>
            JOIN devops_pipeline_stage dps ON dps.pipeline_id = dp.id
            JOIN devops_pipeline_task dpt ON dpt.stage_id = dps.id
            JOIN devops_pipeline_app_service_deploy dpad ON dpad.id = dpt.app_service_deploy_id
            AND dpad.env_id=#{pipelineSearchVO.envId}
        </if>
    </sql>

    <sql id="sqlparamName">
        <if test='pipelineSearchVO!=null and pipelineSearchVO.name != null and pipelineSearchVO.name.size> 0'>
            AND
            <foreach collection="pipelineSearchVO.name" item="param" open="(" separator=" OR " close=")">
                (
                dp.NAME LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                )
            </foreach>
        </if>
    </sql>

    <sql id="sqlparamEnable">
        <if test='pipelineSearchVO!=null and pipelineSearchVO.enabled != null'>
            AND dp.is_enabled = #{pipelineSearchVO.enabled}
        </if>
    </sql>

    <sql id="sqlparamTriggerType">
        <if test='pipelineSearchVO!=null and pipelineSearchVO.triggerType != null and pipelineSearchVO.triggerType!=""'>
            AND dp.trigger_type=#{pipelineSearchVO.triggerType}
        </if>
    </sql>

    <sql id="baseSql">
        SELECT DISTINCT
        dp.id,
        dp.is_enabled,
        dp. NAME,
        dp.trigger_type,
        dp.created_by,
        dp.last_update_date,
        dp.object_version_number,
        EXISTS (
        SELECT
        1
        FROM
        devops_pipeline_user_rel dpur
        WHERE
        dpur.pipeline_id = dp.id
        AND dpur.user_id = #{userId}
        AND dp.is_enabled = 1
        ) AS EXECUTE
        FROM
        devops_pipeline dp
    </sql>

    <sql id="executorSql">
        <include refid="baseSql"/>
        JOIN devops_pipeline_user_rel dpur ON dpur.pipeline_id = dp.id
        AND dpur.user_id =#{userId}
        <include refid="sqlparamEnvId"/>
        WHERE
        dp.project_id = #{projectId}
        <include refid="sqlparamName"/>
        <include refid="sqlparamEnable"/>
        <include refid="sqlparamTriggerType"/>
    </sql>

    <sql id="creatorSql">
        <include refid="baseSql"/>
        <include refid="sqlparamEnvId"/>
        WHERE
        dp.project_id = #{projectId}
        <include refid="sqlparamName"/>
        <include refid="sqlparamEnable"/>
        <include refid="sqlparamTriggerType"/>
        AND dp.created_by = #{userId}
    </sql>

    <sql id="manageSql">
        <include refid="baseSql"/>
        <include refid="sqlparamEnvId"/>
        WHERE
        dp.project_id = #{projectId}
        <include refid="sqlparamEnable"/>
        <include refid="sqlparamTriggerType"/>
        <include refid="sqlparamName"/>
    </sql>

    <select id="listEnvIdByPipelineId" resultType="java.lang.Long">
        SELECT distinct
            dpasd.env_id
        FROM
            devops_pipeline dp
            JOIN devops_pipeline_stage dps ON dps.pipeline_id = dp.id
            JOIN devops_pipeline_task dpt ON dpt.stage_id = dps.id
            JOIN devops_pipeline_app_service_deploy dpasd ON dpasd.id = dpt.app_service_deploy_id
        WHERE
            dp.id = #{pipelineId}
    </select>

    <select id="selectByProjectId" resultType="io.choerodon.devops.infra.dto.PipelineDTO">
        SELECT
        dp.id,
        de.name AS envName
        FROM
        devops_pipeline  dp,
        devops_pipeline_stage dps,
	    devops_pipeline_task dpt,
		devops_pipeline_app_service_deploy dpad,
		devops_env de
        WHERE dp.id=#{pipelineId}
        AND dp.id  = dps.pipeline_id
        AND dpt.stage_id=dps.id
        AND dpt.app_service_deploy_id=dpad.id
        AND dpad.env_id=de.id
    </select>
</mapper>
